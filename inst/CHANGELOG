
########## Version 0.7 (March 2004) ##############

1) A major new function has been included: "leaps". Leaps implements
Duarte Silva's adaptation of Furnival and Wilson's Leaps and Bounds
Algorithm for variable selection in Regression Analysis. The bulk of
computations are carried out by C++ routines.

2) New checks for symmetry and positive-definiteness of the input
matrix were added.

3) The references in the help files were updated. 



########## Version 0.4.1 (February 2004) #########

1) Changed file gcd.Rd, which had old default option for the argument
pcindices. This generated a codoc mismatch.



##########  Version 0.4 (April 2003) ##############

1) Version 1.7 of R includes LAPACK. The configure scripts to check
   for the presence of LAPACK in the system have been deleted.

2) Argument "initialsol" in functions "anneal" and "improve", as well
   as argument "initialpop" in function "genetic" are now NULL by
   default. The validations and initializations have been changed as a result.

3) Argument "pcindices" in function "gcd.coef" is initially NULL and
   will be set to 1:kmax unless the user has specified a set of PC indices.

4) Validation tests in functions "gcd.coef", "rm.coef" and "rv.coef"
   to check whether user-specified variable (and or PC) indices are
   integers.

5) Validation tests in functions "anneal", "improve" and "genetic" to
   test whether inital solutions or population are specified as arrays
   of integers.

6) A bug was fixed in functions "anneal", "genetic" and "improve" in
   those cases when argument "pcindices" is defined by the user. A
   logical comparison between a vector "pcindices" and another vector
   was being treated as if a global value for equality were returned.


##########  Version 0.3 (October 2002) ##############

1) Changes to the configure scripts necessary for configuration in the
   MacOSX.

2) Functions anneal, genetic and improve now include checks for
   covariance/correlation matrices not of full rank. If non-full rank
   matrices are given, the functions exit with a warning.



##########  Version 0.2  (June 2002) #################

The following changes were made in Version 0.2 of R package subselect:

1) A bug was corrected in function anneal: when more than one solution
   (nsol > 1) was requested, the initial temperature for subsequent
   solutions was not being updated.

2) The Fortran code was changed to use R's default random number
   generator, introducing a call to R as described in pages 48 and
   50-51 of the "Writing R Extensions" manual, version 1.5. As a
   consequence, the LAPACK routine SLARUV is no longer used and the
   "iseed" argument of functions "anneal", "genetic" and "improve" has
   been replaced by the logical argument "setseed".

3) Initial solutions (variable subsets) may now be fed by the user to
   each of functions "anneal" (argument "initialsol"), "genetic"
   (argument "initialpop") and "improve" (argument "initialsol").

4) The Fortran code was changed to pass messages directly to the R GUI
   (which did not occur in the Windows version), as described in page 
   50 of the "Writing R Extensions" manual, version 1.5.

5) The "indices" argument of functions "gcd.coef", "rm.coef" and
   "rv.coef" can now be 2-d or 3-d arrays. In this way, the "$subsets"
   and "$bestsets" output options of functions "anneal", "genetic" and
   "improve" can be passed directly to functions "rm.coef", "rv.coef"
   and "gcd.coef", allowing easy computation of values of any
   criteria for subsets produced by the search algorithms using 
   a different criterion.

6) The "printfile" option of functions "anneal", "genetic" and
   "improve" has been dropped, as printing to files is best done using
   the R environment.

7) Function "anneal" has a new argument, "coolfreq", which controls
   the frequency with which the simulated annealing temperature is
   cooled (used to be hard-coded as every 20 iterations in the Fortran
   code of version 0.1).

8) Function "genetic" has a new argument "mutprob", which controls the
   probability of each offspring in the genetic algorithm undergoing a
   mutation (i.e., being fed to the restricted local improvement
   algorithm), if the "mutate" option is set to TRUE (previously *all*
   children were mutated, which considerably slowed down run times).

9) Function "full.k.search" has been dropped from the
   package. It was computationally inefficient and not in the general
   spirit of the package. For computationally efficient full-search
   algorithms, see program SSCMA by Pedro Duarte Silva of the
   Universidade Catolica do Porto, available at
   http://porto.ucp.pt/psilva

10) The help files were updated accordingly. Details of the "rv.coef"
   and "rm.coef" functions were also introduced.